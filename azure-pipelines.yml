# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest



# Pipelines > Stages > Jobs > Task(steps)
stages:
  - stage: BuildsApp 
    displayName: 'Run a BuildsApp'
    jobs:
    - job: Job1
      dependsOn: Job2
      steps:
      - script: echo Job1,$(PipelineLevelVariable) world!
      - bash:   echo Build Firstjob
      - bash:   echo BuildNumber - $(Build.BuildNumber)
      - bash:   echo SourceBranchName - $(Build.SourceBranchName)
      - bash:   echo SourcesDirectory - $(Build.SourcesDirectory)
      - bash:   echo DefaultWorkingDirectory - $(System.DefaultWorkingDirectory)
      - bash:   ls -R $(System.DefaultWorkingDirectory)
      - bash:   echo ArtifactStagingDirectory - $(Build.ArtifactStagingDirectory)
      - bash:   java -version
      - bash:   node --version
      - bash:   python --version
      - bash:   mvn -version
      - bash:   ls -R $(Build.ArtifactStagingDirectory)
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: |
            **/*.yml
            **/*.cs
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - bash:   ls -R $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'PublishBuildArtifacts1'
          publishLocation: 'Container'
      displayName: Run a one-line script
     
    - job: Job2
      variables: 
       Joblevelvariable: Joblevelveraiblevalue
      steps:
      - script: "
      echo job2, world!
      echo job21, world!"
      - bash: echo $(Joblevelvariable)
      displayName: Run a one-line script

  - stage: DEVBUILD
    displayName: 'Run DEVBUILD'
    jobs:
    - job: Job21
      steps:
      - script: echo Job1, world!
      displayName: Run a one-line script

 #deploment is same as Job 
    - deployment: DevDepJob  
      environment: DevENV
      strategy:
       runOnce:
         deploy:
          steps:
             - script: echo DevDepJob
      displayName: Run a one-line script
      

  - stage: PRODBUILD
    displayName: 'Run PRODBUILD'
  
    dependsOn: 
    - BuildsApp    
    - DEVBUILD    
    jobs:    
    - job: Job21    
      steps:
      - script: echo Job1, world!
      displayName: Run a one-line script
  #deploment is same as Job 
    - deployment: ProdDepJob  
      environment: PRODENV
      strategy:
       runOnce:
         deploy:
          steps:
             - script: echo DevDepJob
      displayName: Run a one-line script
           
